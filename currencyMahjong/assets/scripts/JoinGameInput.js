// Generated by CoffeeScript 1.12.5

cc.Class({
    "extends": cc.Component,
    properties: {
        nums: {
            "default": [],
            type: [cc.Label]
        },
        _inputIndex: 0
    },
    onResetClicked: function() {

        for (var i = 0; i < this.nums.length; i++) {
            this.nums[i].string = " ";
        }
        return this._inputIndex = 0;
    },
    onDelClicked: function() {
        if (this._inputIndex > 0) {
            this._inputIndex -= 1;
            return this.nums[this._inputIndex].string = "";
        }
    },
    onCloseClicked: function() {
        return this.node.active = false;
    },
    onInput: function(num) {
        var roomId;
        if (this._inputIndex >= this.nums.length) {
            return;
        }
        this.nums[this._inputIndex].string = num;
        this._inputIndex += 1;
        if (this._inputIndex === this.nums.length) {
            roomId = this.parseRoomID();
            console.log("roomID: " + roomId);
            return this.onInputFinished(roomId);
        }
    },
    onInputFinished: function(roomId) {
        var self;
        self = this;
        return cc.vv.userMgr.enterRoom(roomId, function(ret) {
            var content;
            if (ret.errcode === 0) {
                return self.node.active = false;
            } else {
                content = "房间[" + roomId + "]不存在，请重新输入!";
                if (ret.errcode === 1) {
                    content = "房间[" + roomId + "]已满!";
                }
                cc.vv.alert.show("提示", content);
                return self.onResetClicked();
            }
        });
    },
    parseRoomID: function() {
        var  str;
        str = "";
        for (var i = 0; i < this.nums.length; i++) {
            str += this.nums[i].string;
        }
        return str;
    },
    onN0Clicked: function() {
        return this.onInput(0);
    },
    onN1Clicked: function() {
        return this.onInput(1);
    },
    onN2Clicked: function() {
        return this.onInput(2);
    },
    onN3Clicked: function() {
        return this.onInput(3);
    },
    onN4Clicked: function() {
        return this.onInput(4);
    },
    onN5Clicked: function() {
        return this.onInput(5);
    },
    onN6Clicked: function() {
        return this.onInput(6);
    },
    onN7Clicked: function() {
        return this.onInput(7);
    },
    onN8Clicked: function() {
        return this.onInput(8);
    },
    onN9Clicked: function() {
        return this.onInput(9);
    },
    update: function(dt) {}
});


