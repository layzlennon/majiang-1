// Generated by CoffeeScript 1.12.5
cc.Class({
    "extends": cc.Component,
    properties: {
        account: null,
        userId: null,
        userName: null,
        lv: 0,
        exp: 0,
        coins: 0,
        gems: 0,
        sign: 0,
        ip: "",
        sex: 0,
        roomData: null,
        oldRoomId: null
    },
    guestAuth: function() {
        var account;
        account = cc.args["account"];
        if (account === null) {
            account = cc.sys.localStorage.getItem("account");
        }
        if (account === null) {
            account = Date.now();
            cc.sys.localStorage.setItem("account", account);
        }
        return cc.vv.http.sendRequest("/guest", {
            account: account
        }, this.onAuth);
    },
    enterRoom: function(roomId, callback) {
        var data, onEnter, self;
        self = this;
        onEnter = function(ret) {
            var fn;
            console.log("ret : " + JSON.stringify(ret));
            if (ret.errcode !== 0) {
                if (ret.errcode === -1) {
                    fn = function() {
                        return self.enterRoom(roomId, callback);
                    };
                    return setTimeout(fn, 5000);
                } else {
                    cc.vv.wc.hide();
                    if (callback) {
                        return callback(ret);
                    }
                }
            } else {
                if (callback) {
                    callback(ret);
                }
                return cc.vv.gameNetMgr.connectGameServer(ret);
            }
        };
        data = {
            account: cc.vv.userMgr.account,
            sign: cc.vv.userMgr.sign,
            roomid: roomId
        };
        cc.vv.wc.show("正在进入房间 " + roomId);
        return cc.vv.http.sendRequest("/enter_private_room", data, onEnter);
    },
    onAuth: function(ret) {
        var self;
        cc.log("onAuth" + JSON.stringify(ret));
        self = cc.vv.userMgr;
        if (ret.errcode !== 0) {
            return cc.log(ret.errmsg);
        } else {
            self.account = ret.account;
            self.sign = ret.sign;
            cc.vv.http.url = "http://" + ret.halladdr;
            return self.login();
        }
    },
    login: function() {
        var onLogin, self;
        self = this;
        onLogin = function(ret) {
            cc.log("ret :" + JSON.stringify(ret));
            if (ret.errcode) {
                return cc.log(ret.errmsg);
            } else {
                if (!ret.userid) {
                    return cc.director.loadScene("Createrole");
                } else {
                    cc.log("enter hall: " + ret);
                    self.account = ret.account;
                    self.userId = ret.userid;
                    self.userName = ret.name;
                    self.lv = ret.lv;
                    self.exp = ret.exp;
                    self.coins = ret.coins;
                    self.gems = ret.gems;
                    self.roomData = ret.roomid;
                    self.sex = ret.sex;
                    self.ip = ret.ip;
                    return cc.director.loadScene("HallScene");
                }
            }
        };
        cc.vv.wc.show("正在登陆游戏");
        return cc.vv.http.sendRequest("/login", {
            account: this.account,
            sign: this.sign
        }, onLogin);
    },
    createUser: function(name) {
        var data, onCreate, self;
        self = this;
        onCreate = function(ret) {
            if (ret.errcode !== 0) {
                return cc.log(ret.errmsg);
            } else {
                return self.login();
            }
        };
        data = {
            account: this.account,
            sign: this.sign,
            name: name
        };
        return cc.vv.http.sendRequest("/create_user", data, onCreate);
    },
    update: function(dt) {}
});
